Las llaves públicas y privadas, conocidas también como cifrado asimétrico de un solo camino, sirven para mandar mensajes privados entre varios nodos con la lógica de que firmas tu mensaje con una llave pública vinculada con una llave privada que puede leer el mensaje.


Cómo funciona un mensaje cifrado con llaves públicas y privadas

        Ambas personas deben crear su llave pública y privada.
        Ambas personas pueden compartir su llave pública a las otras partes (recuerda que esta llave es pública, no hay problema si la “interceptan”).
        La persona que quiere compartir un mensaje puede usar la llave pública de la otra persona para cifrar los archivos y asegurarse que solo puedan ser descifrados con la llave privada de la persona con la que queremos compartir el mensaje.
        El mensaje está cifrado y puede ser enviado a la otra persona sin problemas en caso de que los archivos sean interceptados.
        La persona a la que enviamos el mensaje cifrado puede emplear su llave privada para descifrar el mensaje y ver los archivos.


+++++++Cómo generar tus llaves SSH

¡estar primero en el home de GitBash!

git config -l 

git config --global user.name "my@email.com" (el de verdad)

ssh-keygen -t rsa -b 4096 -C "my@email.com"(el de verdad)
(enter)

para ver la llave es buscando la ruta que nos de en dónde se guarda el archivo y abrirla con visualStudio y llevarla a GitHub 

**(hay que revisar que ssh esté prendido)
   eval $(ssh-agent -s)
y debe retornar 
    Agent pid (número random)

**Agregar la llave 
buscar la ruta en la que está la llave 
  ssh-add ~/ssh/id_sra (agregamos la llave privada)

****
-ir a mi perfil de GitHub
-settings
-ssh and GPG keys 
-new ssh key 
-nombrarlo 
-pegar mi llave 
